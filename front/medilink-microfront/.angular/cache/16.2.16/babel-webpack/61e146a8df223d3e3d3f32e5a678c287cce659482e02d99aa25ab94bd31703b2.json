{"ast":null,"code":"import { Urls } from '../config/Urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PrescriptionService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${Urls.ordenance}/api/prescriptions`;\n  }\n  getPrescriptions() {\n    return this.http.get(this.apiUrl);\n  }\n  getPrescriptionById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createPrescription(prescription) {\n    return this.http.post(this.apiUrl, prescription);\n  }\n  updatePrescription(id, prescription) {\n    return this.http.put(`${this.apiUrl}/${id}`, prescription);\n  }\n  deletePrescription(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PrescriptionService_Factory(t) {\n      return new (t || PrescriptionService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PrescriptionService,\n      factory: PrescriptionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Urls","PrescriptionService","constructor","http","apiUrl","ordenance","getPrescriptions","get","getPrescriptionById","id","createPrescription","prescription","post","updatePrescription","put","deletePrescription","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ufl\\Downloads\\sbitar\\front\\medilink-microfront\\src\\app\\Services\\prescription.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Prescription } from '../models/prescription';\nimport { Urls } from '../config/Urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrescriptionService {\n  private apiUrl = `${Urls.ordenance}/api/prescriptions`;\n\n  constructor(private http: HttpClient) {}\n\n  getPrescriptions(): Observable<Prescription[]> {\n    return this.http.get<Prescription[]>(this.apiUrl);\n  }\n\n  getPrescriptionById(id: number): Observable<Prescription> {\n    return this.http.get<Prescription>(`${this.apiUrl}/${id}`);\n  }\n\n  createPrescription(prescription: Prescription): Observable<Prescription> {\n    return this.http.post<Prescription>(this.apiUrl, prescription);\n  }\n\n  updatePrescription(id: number, prescription: Prescription): Observable<Prescription> {\n    return this.http.put<Prescription>(`${this.apiUrl}/${id}`, prescription);\n  }\n\n  deletePrescription(id: number): Observable<string> {\n    return this.http.delete<string>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":"AAIA,SAASA,IAAI,QAAQ,gBAAgB;;;AAKrC,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,IAAI,CAACK,SAAS,oBAAoB;EAEf;EAEvCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAiB,IAAI,CAACH,MAAM,CAAC;EACnD;EAEAI,mBAAmBA,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,CAAC;EAC5D;EAEAC,kBAAkBA,CAACC,YAA0B;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAe,IAAI,CAACR,MAAM,EAAEO,YAAY,CAAC;EAChE;EAEAE,kBAAkBA,CAACJ,EAAU,EAAEE,YAA0B;IACvD,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAe,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEE,YAAY,CAAC;EAC1E;EAEAI,kBAAkBA,CAACN,EAAU;IAC3B,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAS,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,CAAC;EACzD;;;uBAvBWR,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBnB,mBAAmB;MAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}