{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/subscription.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction UserSubscriptionViewComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r4);\n  }\n}\nfunction UserSubscriptionViewComponent_div_11_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\", 24);\n    i0.ɵɵtext(2, \" Your subscription is expiring soon! Consider renewing to continue enjoying the benefits. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function UserSubscriptionViewComponent_div_11_div_17_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.renewSubscription(ctx_r6.activeSubscription.subid));\n    });\n    i0.ɵɵtext(4, \"Renew Now\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserSubscriptionViewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtext(2, \"Active\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14)(4, \"h3\", 15);\n    i0.ɵɵtext(5, \"Current Subscription\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 16);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 17)(9, \"div\", 18)(10, \"span\", 19);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 20);\n    i0.ɵɵtext(13, \"remaining\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"p\", 21);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(17, UserSubscriptionViewComponent_div_11_div_17_Template, 5, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"You're currently subscribed to \", ctx_r1.activeSubscription.typesub, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.countdown);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Ends on \", i0.ɵɵpipeBind2(16, 4, ctx_r1.activeSubscription.endDate, \"mediumDate\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isNearingExpiration(ctx_r1.activeSubscription.endDate));\n  }\n}\nfunction UserSubscriptionViewComponent_div_13_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \" \\u26A0\\uFE0F \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserSubscriptionViewComponent_div_13_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 20);\n    i0.ɵɵtext(5, \"remaining\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 21);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sub_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r10.getTimeRemaining(sub_r8.endDate));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Ends on \", i0.ɵɵpipeBind2(8, 2, sub_r8.endDate, \"mediumDate\"), \"\");\n  }\n}\nfunction UserSubscriptionViewComponent_div_13_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\", 24);\n    i0.ɵɵtext(2, \" This subscription is expiring soon! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserSubscriptionViewComponent_div_13_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function UserSubscriptionViewComponent_div_13_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const sub_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.payForSubscription(sub_r8.subid));\n    });\n    i0.ɵɵtext(1, \" Pay Now \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserSubscriptionViewComponent_div_13_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function UserSubscriptionViewComponent_div_13_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const sub_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.cancelSubscription(sub_r8.subid));\n    });\n    i0.ɵɵtext(1, \" Cancel \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserSubscriptionViewComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 14)(2, \"h3\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 16);\n    i0.ɵɵtext(5);\n    i0.ɵɵtemplate(6, UserSubscriptionViewComponent_div_13_span_6_Template, 2, 0, \"span\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, UserSubscriptionViewComponent_div_13_div_7_Template, 9, 5, \"div\", 28);\n    i0.ɵɵtemplate(8, UserSubscriptionViewComponent_div_13_div_8_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementStart(9, \"div\", 29);\n    i0.ɵɵtemplate(10, UserSubscriptionViewComponent_div_13_button_10_Template, 2, 0, \"button\", 30);\n    i0.ɵɵtemplate(11, UserSubscriptionViewComponent_div_13_button_11_Template, 2, 0, \"button\", 31);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sub_r8 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"popular\", sub_r8.status === \"success\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(sub_r8.typesub);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Status: \", sub_r8.status, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isNearingExpiration(sub_r8.endDate) && sub_r8.status === \"success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", sub_r8.endDate && sub_r8.endDate !== \"NULL\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isNearingExpiration(sub_r8.endDate) && sub_r8.status === \"success\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.canPayForSubscription(sub_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", sub_r8.status === \"success\");\n  }\n}\nfunction UserSubscriptionViewComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"p\");\n    i0.ɵɵtext(2, \"No subscriptions found matching your criteria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class UserSubscriptionViewComponent {\n  constructor(subscriptionService, router, cdr, dialog,\n  // Inject the MatDialog service\n  snackBar // Add MatSnackBar for notifications\n  ) {\n    this.subscriptionService = subscriptionService;\n    this.router = router;\n    this.cdr = cdr;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.subscriptions = [];\n    this.filteredSubscriptions = [];\n    this.activeSubscription = null;\n    this.countdown = 'N/A';\n    this.statuses = ['All', 'success', 'pending', 'canceled'];\n    this.selectedStatus = 'All';\n    this.typeHierarchy = ['1 month', '3 months', '6 months', '1 year'];\n  }\n  ngOnInit() {\n    this.loadSubscriptions();\n    this.timerSubscription = interval(1000).subscribe(() => {\n      this.updateCountdown();\n    });\n  }\n  ngOnDestroy() {\n    if (this.timerSubscription) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n  loadSubscriptions() {\n    this.subscriptionService.getSubscriptions().subscribe(data => {\n      console.log('Subscriptions loaded:', data);\n      this.subscriptions = data || [];\n      this.applyStatusFilter();\n      this.activeSubscription = this.subscriptions.find(sub => sub.status === 'success' && sub.endDate && sub.endDate !== 'NULL');\n      console.log('Active subscription:', this.activeSubscription);\n      this.updateCountdown();\n      this.cdr.detectChanges();\n    }, error => {\n      console.error('Error loading subscriptions', error);\n      alert('Failed to load subscriptions: ' + (error.error || error.message));\n      this.subscriptions = [];\n      this.filteredSubscriptions = [];\n      this.activeSubscription = null;\n      this.cdr.detectChanges();\n    });\n  }\n  cancelSubscription(subid) {\n    // log temporaire ou appel au service réel\n    console.log('Cancel subscription with ID:', subid);\n    // Exemple avec un service si tu en as un :\n    // this.subscriptionService.cancel(subid).subscribe(() => this.loadSubscriptions());\n  }\n\n  applyStatusFilter() {\n    if (this.selectedStatus === 'All') {\n      this.filteredSubscriptions = [...this.subscriptions];\n    } else {\n      this.filteredSubscriptions = this.subscriptions.filter(sub => sub.status === this.selectedStatus);\n    }\n  }\n  onStatusFilterChange() {\n    this.applyStatusFilter();\n    this.cdr.detectChanges();\n  }\n  payForSubscription(subid) {\n    this.router.navigate(['/payment', subid]);\n  }\n  // Modify the cancelSubscription method\n  updateCountdown() {\n    if (!this.activeSubscription || !this.activeSubscription.endDate) {\n      this.countdown = 'N/A';\n      return;\n    }\n    const now = new Date();\n    const end = new Date(this.activeSubscription.endDate);\n    const diffMs = end.getTime() - now.getTime();\n    if (diffMs <= 0) {\n      this.countdown = 'Expired';\n      this.activeSubscription = null;\n      this.loadSubscriptions();\n      return;\n    }\n    const diffSeconds = Math.floor(diffMs / 1000);\n    const months = Math.floor(diffSeconds / (60 * 60 * 24 * 30));\n    const days = Math.floor(diffSeconds % (60 * 60 * 24 * 30) / (60 * 60 * 24));\n    const hours = Math.floor(diffSeconds % (60 * 60 * 24) / (60 * 60));\n    const minutes = Math.floor(diffSeconds % (60 * 60) / 60);\n    const seconds = diffSeconds % 60;\n    let result = '';\n    if (months > 0) result += `${months} month${months > 1 ? 's' : ''} `;\n    if (days > 0 || months > 0) result += `${days} day${days > 1 ? 's' : ''} `;\n    result += `${hours}h ${minutes}m ${seconds}s`;\n    this.countdown = result.trim();\n  }\n  getTimeRemaining(endDate) {\n    if (!endDate || endDate === 'NULL') {\n      return 'N/A';\n    }\n    const now = new Date();\n    const end = new Date(endDate);\n    const diffMs = end.getTime() - now.getTime();\n    if (diffMs <= 0) {\n      return 'Expired';\n    }\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    const months = Math.floor(diffDays / 30);\n    const days = diffDays % 30;\n    let result = '';\n    if (months > 0) result += `${months} month${months > 1 ? 's' : ''} `;\n    if (days > 0 || months === 0) result += `${days} day${days > 1 ? 's' : ''}`;\n    return result.trim();\n  }\n  canPayForSubscription(sub) {\n    if (sub.status === 'success') {\n      return false;\n    }\n    if (!this.activeSubscription) {\n      return true;\n    }\n    const newIndex = this.typeHierarchy.indexOf(sub.typesub);\n    const activeIndex = this.typeHierarchy.indexOf(this.activeSubscription.typesub);\n    return newIndex > activeIndex;\n  }\n  isNearingExpiration(endDate) {\n    if (!endDate || endDate === 'NULL') {\n      return false;\n    }\n    const now = new Date();\n    const end = new Date(endDate);\n    const diffMs = end.getTime() - now.getTime();\n    if (diffMs <= 0) {\n      return false;\n    }\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    return diffDays <= 7;\n  }\n  renewSubscription(subid) {\n    this.router.navigate(['/payment', subid]);\n  }\n  static {\n    this.ɵfac = function UserSubscriptionViewComponent_Factory(t) {\n      return new (t || UserSubscriptionViewComponent)(i0.ɵɵdirectiveInject(i1.SubscriptionService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserSubscriptionViewComponent,\n      selectors: [[\"app-user-subscription-view\"]],\n      decls: 15,\n      vars: 5,\n      consts: [[1, \"subscriptions-display-container\"], [1, \"management-header\"], [1, \"header-subtitle\"], [1, \"filter-container\", 2, \"margin-bottom\", \"30px\", \"text-align\", \"center\"], [\"for\", \"statusFilter\", 2, \"font-size\", \"16px\", \"color\", \"#666\", \"margin-right\", \"10px\"], [\"id\", \"statusFilter\", 2, \"padding\", \"8px 15px\", \"border-radius\", \"6px\", \"border\", \"1px solid #ddd\", \"font-size\", \"14px\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"subscription-card popular\", \"style\", \"margin-bottom: 40px;\", 4, \"ngIf\"], [1, \"subscriptions-grid\"], [\"class\", \"subscription-card\", 3, \"popular\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-subscriptions\", 4, \"ngIf\"], [3, \"value\"], [1, \"subscription-card\", \"popular\", 2, \"margin-bottom\", \"40px\"], [1, \"popular-badge\"], [1, \"subscription-header\"], [1, \"subscription-title\"], [1, \"subscription-description\"], [1, \"subscription-pricing\"], [1, \"discounted-price\"], [1, \"price-amount\"], [1, \"price-period\"], [1, \"actual-price\"], [\"class\", \"renewal-suggestion\", \"style\", \"text-align: center; margin-bottom: 20px;\", 4, \"ngIf\"], [1, \"renewal-suggestion\", 2, \"text-align\", \"center\", \"margin-bottom\", \"20px\"], [1, \"warning\", 2, \"color\", \"#ef4444\", \"font-size\", \"14px\", \"margin-bottom\", \"15px\"], [1, \"btn-subscribe\", 3, \"click\"], [1, \"subscription-card\"], [\"class\", \"expiring-indicator\", \"title\", \"Expiring Soon!\", 4, \"ngIf\"], [\"class\", \"subscription-pricing\", 4, \"ngIf\"], [1, \"subscription-actions\"], [\"class\", \"btn-subscribe\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn-subscribe\", \"style\", \"background: linear-gradient(90deg, #ef4444, #f87171); margin-left: 10px;\", 3, \"click\", 4, \"ngIf\"], [\"title\", \"Expiring Soon!\", 1, \"expiring-indicator\"], [1, \"btn-subscribe\", 2, \"background\", \"linear-gradient(90deg, #ef4444, #f87171)\", \"margin-left\", \"10px\", 3, \"click\"], [1, \"no-subscriptions\"]],\n      template: function UserSubscriptionViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"My Subscriptions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 2);\n          i0.ɵɵtext(5, \"Manage your current subscriptions and payment status\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n          i0.ɵɵtext(8, \"Filter by Status:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"select\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function UserSubscriptionViewComponent_Template_select_ngModelChange_9_listener($event) {\n            return ctx.selectedStatus = $event;\n          })(\"change\", function UserSubscriptionViewComponent_Template_select_change_9_listener() {\n            return ctx.onStatusFilterChange();\n          });\n          i0.ɵɵtemplate(10, UserSubscriptionViewComponent_option_10_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, UserSubscriptionViewComponent_div_11_Template, 18, 7, \"div\", 7);\n          i0.ɵɵelementStart(12, \"div\", 8);\n          i0.ɵɵtemplate(13, UserSubscriptionViewComponent_div_13_Template, 12, 9, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, UserSubscriptionViewComponent_div_14_Template, 3, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedStatus);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.statuses);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.activeSubscription);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredSubscriptions);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.filteredSubscriptions.length);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel, i5.DatePipe],\n      styles: [\"[_nghost-%COMP%] {\\n  margin-top: 80px;\\n  display: block;\\n  padding: 40px 20px;\\n  min-height: 100vh;\\n}\\n\\n.subscriptions-display-container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n}\\n\\n.management-header[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 40px;\\n}\\n\\n.management-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 32px;\\n  color: #3b82f6;\\n  position: relative;\\n  font-weight: 700;\\n  margin-bottom: 10px;\\n}\\n\\n.management-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]::after {\\n  content: '';\\n  position: absolute;\\n  bottom: -10px;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  width: 60px;\\n  height: 4px;\\n  background: #2dd4bf;\\n  border-radius: 2px;\\n}\\n\\n.header-subtitle[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  color: #666;\\n  margin: 0;\\n}\\n\\n.subscriptions-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  gap: 30px;\\n}\\n\\n.subscription-card[_ngcontent-%COMP%] {\\n  background: #ffffff;\\n  border-radius: 12px;\\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\\n  transition: all 0.3s ease;\\n  position: relative;\\n  overflow: hidden;\\n  padding: 30px;\\n  border: 2px solid transparent;\\n}\\n\\n.subscription-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\\n  border-color: #2dd4bf;\\n}\\n\\n.subscription-card.popular[_ngcontent-%COMP%] {\\n  border-color: #3b82f6;\\n  background: linear-gradient(180deg, rgba(59, 130, 246, 0.05), #ffffff);\\n}\\n\\n.popular-badge[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  right: 15px;\\n  background: #3b82f6;\\n  color: #ffffff;\\n  font-size: 12px;\\n  font-weight: 600;\\n  padding: 5px 10px;\\n  border-radius: 12px;\\n  box-shadow: 0 2px 5px rgba(59, 130, 246, 0.3);\\n}\\n\\n.subscription-header[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\\n.subscription-title[_ngcontent-%COMP%] {\\n  font-size: 22px;\\n  font-weight: 700;\\n  color: #3b82f6;\\n  margin: 0 0 10px 0;\\n}\\n\\n.subscription-description[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #666;\\n  margin: 0;\\n  line-height: 1.5;\\n}\\n\\n.subscription-pricing[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 25px;\\n}\\n\\n.discounted-price[_ngcontent-%COMP%] {\\n  font-size: 28px;\\n  font-weight: 700;\\n  color: #2dd4bf;\\n  margin: 0;\\n  display: flex;\\n  justify-content: center;\\n  align-items: baseline;\\n  gap: 5px;\\n}\\n\\n.price-amount[_ngcontent-%COMP%] {\\n  font-size: 28px;\\n}\\n\\n.price-period[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #666;\\n}\\n\\n.actual-price[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  color: #999;\\n  margin: 5px 0 0 0;\\n}\\n\\n.subscription-features[_ngcontent-%COMP%] {\\n  margin-bottom: 25px;\\n}\\n\\n.features-list[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  text-align: center;\\n}\\n\\n.features-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #333;\\n  margin-bottom: 10px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n}\\n\\n.features-list[_ngcontent-%COMP%]   clr-icon[_ngcontent-%COMP%] {\\n  color: #2dd4bf;\\n  width: 16px;\\n  height: 16px;\\n}\\n\\n.subscription-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.btn-subscribe[_ngcontent-%COMP%] {\\n  background: linear-gradient(90deg, #3b82f6, #60a5fa);\\n  color: white;\\n  padding: 12px 30px;\\n  border: none;\\n  border-radius: 6px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  box-shadow: 0 3px 10px rgba(59, 130, 246, 0.3);\\n}\\n\\n.btn-subscribe[_ngcontent-%COMP%]:hover {\\n  background: #2dd4bf;\\n  transform: scale(1.05);\\n  box-shadow: 0 5px 15px rgba(94, 234, 212, 0.4);\\n}\\n\\n.no-subscriptions[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 16px;\\n  color: #666;\\n  padding: 20px;\\n}\\n\\n@media (max-width: 768px) {\\n  [_nghost-%COMP%] {\\n      padding: 20px 10px;\\n  }\\n\\n  .subscriptions-display-container[_ngcontent-%COMP%] {\\n      max-width: 100%;\\n  }\\n\\n  .management-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n      font-size: 28px;\\n  }\\n\\n  .header-subtitle[_ngcontent-%COMP%] {\\n      font-size: 14px;\\n  }\\n\\n  .subscription-card[_ngcontent-%COMP%] {\\n      padding: 20px;\\n  }\\n\\n  .subscription-title[_ngcontent-%COMP%] {\\n      font-size: 20px;\\n  }\\n\\n  .subscription-description[_ngcontent-%COMP%] {\\n      font-size: 13px;\\n  }\\n\\n  .discounted-price[_ngcontent-%COMP%]   .price-amount[_ngcontent-%COMP%] {\\n      font-size: 24px;\\n  }\\n\\n  .price-period[_ngcontent-%COMP%] {\\n      font-size: 12px;\\n  }\\n\\n  .actual-price[_ngcontent-%COMP%] {\\n      font-size: 14px;\\n  }\\n\\n  .features-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n      font-size: 13px;\\n  }\\n\\n  .btn-subscribe[_ngcontent-%COMP%] {\\n      padding: 10px 20px;\\n      font-size: 14px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["interval","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","status_r4","ɵɵadvance","ɵɵtextInterpolate","ɵɵlistener","UserSubscriptionViewComponent_div_11_div_17_Template_button_click_3_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","renewSubscription","activeSubscription","subid","ɵɵtemplate","UserSubscriptionViewComponent_div_11_div_17_Template","ɵɵtextInterpolate1","ctx_r1","typesub","countdown","ɵɵpipeBind2","endDate","isNearingExpiration","ctx_r10","getTimeRemaining","sub_r8","UserSubscriptionViewComponent_div_13_button_10_Template_button_click_0_listener","_r17","$implicit","ctx_r15","payForSubscription","UserSubscriptionViewComponent_div_13_button_11_Template_button_click_0_listener","_r20","ctx_r18","cancelSubscription","UserSubscriptionViewComponent_div_13_span_6_Template","UserSubscriptionViewComponent_div_13_div_7_Template","UserSubscriptionViewComponent_div_13_div_8_Template","UserSubscriptionViewComponent_div_13_button_10_Template","UserSubscriptionViewComponent_div_13_button_11_Template","ɵɵclassProp","status","ctx_r2","canPayForSubscription","UserSubscriptionViewComponent","constructor","subscriptionService","router","cdr","dialog","snackBar","subscriptions","filteredSubscriptions","statuses","selectedStatus","typeHierarchy","ngOnInit","loadSubscriptions","timerSubscription","subscribe","updateCountdown","ngOnDestroy","unsubscribe","getSubscriptions","data","console","log","applyStatusFilter","find","sub","detectChanges","error","alert","message","filter","onStatusFilterChange","navigate","now","Date","end","diffMs","getTime","diffSeconds","Math","floor","months","days","hours","minutes","seconds","result","trim","diffDays","newIndex","indexOf","activeIndex","ɵɵdirectiveInject","i1","SubscriptionService","i2","Router","ChangeDetectorRef","i3","MatDialog","i4","MatSnackBar","selectors","decls","vars","consts","template","UserSubscriptionViewComponent_Template","rf","ctx","UserSubscriptionViewComponent_Template_select_ngModelChange_9_listener","$event","UserSubscriptionViewComponent_Template_select_change_9_listener","UserSubscriptionViewComponent_option_10_Template","UserSubscriptionViewComponent_div_11_Template","UserSubscriptionViewComponent_div_13_Template","UserSubscriptionViewComponent_div_14_Template","length"],"sources":["C:\\Users\\ufl\\Downloads\\sbitar\\front\\medilink-microfront\\src\\app\\shared\\user-subscription-view\\user-subscription-view.component.ts","C:\\Users\\ufl\\Downloads\\sbitar\\front\\medilink-microfront\\src\\app\\shared\\user-subscription-view\\user-subscription-view.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SubscriptionService } from 'src/app/Services/subscription.service';\nimport { Router } from '@angular/router';\nimport { interval, Subscription } from 'rxjs';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-subscription-view',\n  templateUrl: './user-subscription-view.component.html',\n  styleUrls: ['./user-subscription-view.component.css']\n})\nexport class UserSubscriptionViewComponent implements OnInit, OnDestroy {\n  subscriptions: any[] = [];\n  filteredSubscriptions: any[] = [];\n  activeSubscription: any = null;\n  countdown: string = 'N/A';\n  private timerSubscription!: Subscription;\n  statuses: string[] = ['All', 'success', 'pending', 'canceled'];\n  selectedStatus: string = 'All';\n\n  private typeHierarchy: string[] = ['1 month', '3 months', '6 months', '1 year'];\n\n  constructor(\n    private subscriptionService: SubscriptionService,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private dialog: MatDialog  ,\n    // Inject the MatDialog service\n    private snackBar: MatSnackBar  // Add MatSnackBar for notifications\n\n\n  ) {}\n\n  ngOnInit() {\n    this.loadSubscriptions();\n    this.timerSubscription = interval(1000).subscribe(() => {\n      this.updateCountdown();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.timerSubscription) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n\n  loadSubscriptions() {\n    this.subscriptionService.getSubscriptions().subscribe(\n      (data: any[]) => {\n        console.log('Subscriptions loaded:', data);\n        this.subscriptions = data || [];\n        this.applyStatusFilter();\n        this.activeSubscription = this.subscriptions.find(\n          sub => sub.status === 'success' && sub.endDate && sub.endDate !== 'NULL'\n        );\n        console.log('Active subscription:', this.activeSubscription);\n        this.updateCountdown();\n        this.cdr.detectChanges();\n      },\n      error => {\n        console.error('Error loading subscriptions', error);\n        alert('Failed to load subscriptions: ' + (error.error || error.message));\n        this.subscriptions = [];\n        this.filteredSubscriptions = [];\n        this.activeSubscription = null;\n        this.cdr.detectChanges();\n      }\n    );\n  }\n  cancelSubscription(subid: number): void {\n    // log temporaire ou appel au service réel\n    console.log('Cancel subscription with ID:', subid);\n    \n    // Exemple avec un service si tu en as un :\n    // this.subscriptionService.cancel(subid).subscribe(() => this.loadSubscriptions());\n  }\n\n  applyStatusFilter() {\n    if (this.selectedStatus === 'All') {\n      this.filteredSubscriptions = [...this.subscriptions];\n    } else {\n      this.filteredSubscriptions = this.subscriptions.filter(\n        sub => sub.status === this.selectedStatus\n      );\n    }\n  }\n\n  onStatusFilterChange() {\n    this.applyStatusFilter();\n    this.cdr.detectChanges();\n  }\n\n  payForSubscription(subid: number) {\n    this.router.navigate(['/payment', subid]);\n  }\n // Modify the cancelSubscription method\n\n  updateCountdown() {\n    if (!this.activeSubscription || !this.activeSubscription.endDate) {\n      this.countdown = 'N/A';\n      return;\n    }\n\n    const now = new Date();\n    const end = new Date(this.activeSubscription.endDate);\n    const diffMs = end.getTime() - now.getTime();\n\n    if (diffMs <= 0) {\n      this.countdown = 'Expired';\n      this.activeSubscription = null;\n      this.loadSubscriptions();\n      return;\n    }\n\n    const diffSeconds = Math.floor(diffMs / 1000);\n    const months = Math.floor(diffSeconds / (60 * 60 * 24 * 30));\n    const days = Math.floor((diffSeconds % (60 * 60 * 24 * 30)) / (60 * 60 * 24));\n    const hours = Math.floor((diffSeconds % (60 * 60 * 24)) / (60 * 60));\n    const minutes = Math.floor((diffSeconds % (60 * 60)) / 60);\n    const seconds = diffSeconds % 60;\n\n    let result = '';\n    if (months > 0) result += `${months} month${months > 1 ? 's' : ''} `;\n    if (days > 0 || months > 0) result += `${days} day${days > 1 ? 's' : ''} `;\n    result += `${hours}h ${minutes}m ${seconds}s`;\n    this.countdown = result.trim();\n  }\n\n  getTimeRemaining(endDate: string): string {\n    if (!endDate || endDate === 'NULL') {\n      return 'N/A';\n    }\n\n    const now = new Date();\n    const end = new Date(endDate);\n    const diffMs = end.getTime() - now.getTime();\n\n    if (diffMs <= 0) {\n      return 'Expired';\n    }\n\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    const months = Math.floor(diffDays / 30);\n    const days = diffDays % 30;\n\n    let result = '';\n    if (months > 0) result += `${months} month${months > 1 ? 's' : ''} `;\n    if (days > 0 || months === 0) result += `${days} day${days > 1 ? 's' : ''}`;\n    return result.trim();\n  }\n\n  canPayForSubscription(sub: any): boolean {\n    if (sub.status === 'success') {\n      return false;\n    }\n    if (!this.activeSubscription) {\n      return true;\n    }\n    const newIndex = this.typeHierarchy.indexOf(sub.typesub);\n    const activeIndex = this.typeHierarchy.indexOf(this.activeSubscription.typesub);\n    return newIndex > activeIndex;\n  }\n\n  isNearingExpiration(endDate: string): boolean {\n    if (!endDate || endDate === 'NULL') {\n      return false;\n    }\n\n    const now = new Date();\n    const end = new Date(endDate);\n    const diffMs = end.getTime() - now.getTime();\n\n    if (diffMs <= 0) {\n      return false;\n    }\n\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    return diffDays <= 7;\n  }\n\n  renewSubscription(subid: number) {\n    this.router.navigate(['/payment', subid]);\n  }\n}","<div class=\"subscriptions-display-container\">\n  <!-- Header Section -->\n  <div class=\"management-header\">\n    <h2>My Subscriptions</h2>\n    <p class=\"header-subtitle\">Manage your current subscriptions and payment status</p>\n  </div>\n\n  <!-- Status Filter -->\n  <div class=\"filter-container\" style=\"margin-bottom: 30px; text-align: center;\">\n    <label for=\"statusFilter\" style=\"font-size: 16px; color: #666; margin-right: 10px;\">Filter by Status:</label>\n    <select id=\"statusFilter\" [(ngModel)]=\"selectedStatus\" (change)=\"onStatusFilterChange()\" \n            style=\"padding: 8px 15px; border-radius: 6px; border: 1px solid #ddd; font-size: 14px;\">\n      <option *ngFor=\"let status of statuses\" [value]=\"status\">{{ status }}</option>\n    </select>\n  </div>\n\n  <!-- Active Subscription Countdown -->\n  <div *ngIf=\"activeSubscription\" class=\"subscription-card popular\" style=\"margin-bottom: 40px;\">\n    <div class=\"popular-badge\">Active</div>\n    <div class=\"subscription-header\">\n      <h3 class=\"subscription-title\">Current Subscription</h3>\n      <p class=\"subscription-description\">You're currently subscribed to {{ activeSubscription.typesub }}</p>\n    </div>\n    \n    <div class=\"subscription-pricing\">\n      <div class=\"discounted-price\">\n        <span class=\"price-amount\">{{ countdown }}</span>\n        <span class=\"price-period\">remaining</span>\n      </div>\n      <p class=\"actual-price\">Ends on {{ activeSubscription.endDate | date:'mediumDate' }}</p>\n    </div>\n    \n    <div *ngIf=\"isNearingExpiration(activeSubscription.endDate)\" class=\"renewal-suggestion\" style=\"text-align: center; margin-bottom: 20px;\">\n      <p class=\"warning\" style=\"color: #ef4444; font-size: 14px; margin-bottom: 15px;\">\n        Your subscription is expiring soon! Consider renewing to continue enjoying the benefits.\n      </p>\n      <button class=\"btn-subscribe\" (click)=\"renewSubscription(activeSubscription.subid)\">Renew Now</button>\n    </div>\n  </div>\n\n  <!-- Subscription List -->\n  <div class=\"subscriptions-grid\">\n    <div *ngFor=\"let sub of filteredSubscriptions\" class=\"subscription-card\" [class.popular]=\"sub.status === 'success'\">\n      <div class=\"subscription-header\">\n        <h3 class=\"subscription-title\">{{ sub.typesub }}</h3>\n        <p class=\"subscription-description\">\n          Status: {{ sub.status }}\n          <span *ngIf=\"isNearingExpiration(sub.endDate) && sub.status === 'success'\" class=\"expiring-indicator\" title=\"Expiring Soon!\">\n            ⚠️\n          </span>\n        </p>\n      </div>\n      \n      <div *ngIf=\"sub.endDate && sub.endDate !== 'NULL'\" class=\"subscription-pricing\">\n        <div class=\"discounted-price\">\n          <span class=\"price-amount\">{{ getTimeRemaining(sub.endDate) }}</span>\n          <span class=\"price-period\">remaining</span>\n        </div>\n        <p class=\"actual-price\">Ends on {{ sub.endDate | date:'mediumDate' }}</p>\n      </div>\n      \n      <div *ngIf=\"isNearingExpiration(sub.endDate) && sub.status === 'success'\" class=\"renewal-suggestion\" style=\"text-align: center; margin-bottom: 20px;\">\n        <p class=\"warning\" style=\"color: #ef4444; font-size: 14px; margin-bottom: 15px;\">\n          This subscription is expiring soon!\n        </p>\n      </div>\n      \n      <div class=\"subscription-actions\">\n        <button *ngIf=\"canPayForSubscription(sub)\" \n                class=\"btn-subscribe\" \n                (click)=\"payForSubscription(sub.subid)\">\n          Pay Now\n        </button>\n        <button *ngIf=\"sub.status === 'success'\" \n                class=\"btn-subscribe\" \n                style=\"background: linear-gradient(90deg, #ef4444, #f87171); margin-left: 10px;\"\n                (click)=\"cancelSubscription(sub.subid)\">\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"!filteredSubscriptions.length\" class=\"no-subscriptions\">\n    <p>No subscriptions found matching your criteria.</p>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}