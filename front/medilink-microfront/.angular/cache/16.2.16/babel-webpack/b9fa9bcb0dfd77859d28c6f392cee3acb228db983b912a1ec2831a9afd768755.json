{"ast":null,"code":"import { Router } from '@angular/router';\nimport { UsersService } from './users.service';\nimport { inject } from '@angular/core';\nexport const usersGuard = (route, state) => {\n  if (inject(UsersService).isAuthenticated()) {\n    return true;\n  } else {\n    inject(Router).navigate(['/login']);\n    return false;\n  }\n};\nexport const adminGuard = (route, state) => {\n  if (inject(UsersService).isAdmin()) {\n    return true;\n  } else {\n    inject(Router).navigate(['/login']);\n    return false;\n  }\n};","map":{"version":3,"names":["Router","UsersService","inject","usersGuard","route","state","isAuthenticated","navigate","adminGuard","isAdmin"],"sources":["C:\\Users\\ufl\\Downloads\\sbitar\\front\\medilink-microfront\\src\\app\\Services\\users.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\nimport { UsersService } from './users.service';\nimport { inject } from '@angular/core';\n\n\n\nexport const usersGuard: CanActivateFn = (route, state) => {\n  if (inject(UsersService).isAuthenticated()) {\n    return true;\n  }else{\n    inject(Router).navigate(['/login'])\n    return false\n  }\n};\n\n\n\nexport const adminGuard: CanActivateFn = (route, state) => {\n  if (inject(UsersService).isAdmin()) {\n    return true;\n  }else{\n    inject(Router).navigate(['/login'])\n    return false\n  }\n};\n\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,QAAQ,eAAe;AAItC,OAAO,MAAMC,UAAU,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACxD,IAAIH,MAAM,CAACD,YAAY,CAAC,CAACK,eAAe,EAAE,EAAE;IAC1C,OAAO,IAAI;GACZ,MAAI;IACHJ,MAAM,CAACF,MAAM,CAAC,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnC,OAAO,KAAK;;AAEhB,CAAC;AAID,OAAO,MAAMC,UAAU,GAAkBA,CAACJ,KAAK,EAAEC,KAAK,KAAI;EACxD,IAAIH,MAAM,CAACD,YAAY,CAAC,CAACQ,OAAO,EAAE,EAAE;IAClC,OAAO,IAAI;GACZ,MAAI;IACHP,MAAM,CAACF,MAAM,CAAC,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnC,OAAO,KAAK;;AAEhB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}