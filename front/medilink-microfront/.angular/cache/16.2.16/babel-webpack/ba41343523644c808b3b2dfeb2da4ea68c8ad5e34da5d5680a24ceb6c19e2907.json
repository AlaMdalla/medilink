{"ast":null,"code":"import { Urls } from '../config/Urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RendezVousService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = Urls.rendez; // Use 'rendez' instead of 'apiUrl'\n  }\n\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(rendezVous) {\n    return this.http.post(this.apiUrl, rendezVous);\n  }\n  update(id, rendezVous) {\n    return this.http.put(`${this.apiUrl}/${id}`, rendezVous);\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function RendezVousService_Factory(t) {\n      return new (t || RendezVousService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RendezVousService,\n      factory: RendezVousService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Urls","RendezVousService","constructor","http","apiUrl","rendez","getAll","get","getById","id","create","rendezVous","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ufl\\Downloads\\sbitar\\front\\medilink-microfront\\src\\app\\Services\\rendez-vous.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { RendezVous } from '../models/rendez-vous';\nimport { Urls } from '../config/Urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RendezVousService {\n  private apiUrl = Urls.rendez; // Use 'rendez' instead of 'apiUrl'\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<RendezVous[]> {\n    return this.http.get<RendezVous[]>(this.apiUrl);\n  }\n\n  getById(id: number): Observable<RendezVous> {\n    return this.http.get<RendezVous>(`${this.apiUrl}/${id}`);\n  }\n\n  create(rendezVous: RendezVous): Observable<RendezVous> {\n    return this.http.post<RendezVous>(this.apiUrl, rendezVous);\n  }\n\n  update(id: number, rendezVous: RendezVous): Observable<RendezVous> {\n    return this.http.put<RendezVous>(`${this.apiUrl}/${id}`, rendezVous);\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":"AAIA,SAASA,IAAI,QAAQ,gBAAgB;;;AAKrC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAAC;EAES;;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,IAAI,CAACH,MAAM,CAAC;EACjD;EAEAI,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,CAAC;EAC1D;EAEAC,MAAMA,CAACC,UAAsB;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAa,IAAI,CAACR,MAAM,EAAEO,UAAU,CAAC;EAC5D;EAEAE,MAAMA,CAACJ,EAAU,EAAEE,UAAsB;IACvC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAa,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEE,UAAU,CAAC;EACtE;EAEAI,MAAMA,CAACN,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;;;uBAvBWR,iBAAiB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAjBlB,iBAAiB;MAAAmB,OAAA,EAAjBnB,iBAAiB,CAAAoB,IAAA;MAAAC,UAAA,EAFhB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}