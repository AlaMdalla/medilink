{"ast":null,"code":"import { Urls } from '../config/Urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConsultationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${Urls.Consultation}/consultations`; // Adjust endpoint if needed\n  }\n\n  getConsultations() {\n    return this.http.get(this.apiUrl);\n  }\n  getConsultationById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createConsultation(consultation) {\n    return this.http.post(this.apiUrl, consultation);\n  }\n  updateConsultation(id, consultation) {\n    return this.http.put(`${this.apiUrl}/${id}`, consultation);\n  }\n  deleteConsultation(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ConsultationService_Factory(t) {\n      return new (t || ConsultationService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConsultationService,\n      factory: ConsultationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Urls","ConsultationService","constructor","http","apiUrl","Consultation","getConsultations","get","getConsultationById","id","createConsultation","consultation","post","updateConsultation","put","deleteConsultation","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ufl\\Downloads\\sbitar\\front\\medilink-microfront\\src\\app\\Services\\consultation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Consultation } from '../models/consultation';\nimport { Urls } from '../config/Urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsultationService {\n  private apiUrl = `${Urls.Consultation}/consultations`; // Adjust endpoint if needed\n\n  constructor(private http: HttpClient) {}\n\n  getConsultations(): Observable<Consultation[]> {\n    return this.http.get<Consultation[]>(this.apiUrl);\n  }\n\n  getConsultationById(id: number): Observable<Consultation> {\n    return this.http.get<Consultation>(`${this.apiUrl}/${id}`);\n  }\n\n  createConsultation(consultation: Consultation): Observable<Consultation> {\n    return this.http.post<Consultation>(this.apiUrl, consultation);\n  }\n\n  updateConsultation(id: number, consultation: Consultation): Observable<Consultation> {\n    return this.http.put<Consultation>(`${this.apiUrl}/${id}`, consultation);\n  }\n\n  deleteConsultation(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":"AAIA,SAASA,IAAI,QAAQ,gBAAgB;;;AAKrC,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,IAAI,CAACK,YAAY,gBAAgB,CAAC,CAAC;EAEhB;;EAEvCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAiB,IAAI,CAACH,MAAM,CAAC;EACnD;EAEAI,mBAAmBA,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,CAAC;EAC5D;EAEAC,kBAAkBA,CAACC,YAA0B;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAe,IAAI,CAACR,MAAM,EAAEO,YAAY,CAAC;EAChE;EAEAE,kBAAkBA,CAACJ,EAAU,EAAEE,YAA0B;IACvD,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAe,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEE,YAAY,CAAC;EAC1E;EAEAI,kBAAkBA,CAACN,EAAU;IAC3B,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;;;uBAvBWR,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBnB,mBAAmB;MAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}